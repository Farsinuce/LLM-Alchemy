Below is a practical debugging + fix plan that has worked for very similar Next.js + Supabase stacks.

---

### 1 · Turnstile sometimes freezes the whole bootstrap on mobile

| Symptom                                                                                                                                                                           | Root cause                                                                                                                                                                                                                       | Fix                                                                                                                                  |
| --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------ |
| Two `blob:https://challenges.cloudflare.com/...` scripts stay **pending** and the UI stalls at *“Setting up your game session”*.                                                  | Commit `710fccd` added the invisible Cloudflare Turnstile to **every** auth flow, including the anonymous bootstrap. On some mobile browsers the challenge worker never resolves, so `getTurnstileTokenSafely()` waits forever.  | *Skip captcha for anonymous sign‑ups.*<br>`const needsCaptcha = authMethod !== 'anonymous'`. If you really want captcha:<br>\`\`\`ts |
| const token = await Promise.race(\[                                                                                                                                               |                                                                                                                                                                                                                                  |                                                                                                                                      |
| getTurnstileToken(),                       // resolves when captcha solved                                                                                                        |                                                                                                                                                                                                                                  |                                                                                                                                      |
| new Promise<undefined>(r => setTimeout(r, 2500)) // 2.5 s fallback                                                                                                                |                                                                                                                                                                                                                                  |                                                                                                                                      |
| ]);                                                                                                                                                                               |                                                                                                                                                                                                                                  |                                                                                                                                      |
| continueSignup(token);                       // allow undefined                                                                                                                   |                                                                                                                                                                                                                                  |                                                                                                                                      |
| \`\`\`<br>Also add `<link rel="preconnect" href="https://challenges.cloudflare.com">` and give the Turnstile iframe a visible `300 × 65 px` size on mobile so the worker can run. |                                                                                                                                                                                                                                  |                                                                                                                                      |

---

### 2 · Anon bootstrap is 2‑10 s (especially on 4G)

#### What the HAR shows

```
auth/v1/signup                532 ms
auth/v1/signup                540 ms   ← duplicate
INSERT users row              ~260 ms
SELECT users row              ~250 ms
RPC get_token_balance         ~210 ms
```

That’s **4‑5 serial round‑trips**; on a 300 ms 4‑G RTT you’re already near 2.5 s, even before JS execution.

#### Why it happens

*SupabaseProvider* calls `signInAnonymously()` **and** the page-level hook calls it again after the first auth event, so you actually create the same user twice. Then each `await` forces the next request to wait.

#### Quick wins

```ts
// SupabaseProvider.tsx
const bootstrapAnonymous = useCallback(async () => {
  if (supabase.auth.session()) return;           // already logged in
  const { data: { user } } = await supabase.auth.signUp({}); // one call

  // do the heavy lifting in parallel
  await Promise.all([
    supabase.from('users')
            .insert({ id: user.id, is_anonymous: true }),
    supabase.rpc('init_token_balance', { uid: user.id }) // tiny SQL helper
  ]);
}, []);
```

* Single signup, no duplicate HTTP hit.
* `INSERT` and the RPC run concurrently.
* Skip the `SELECT llm_model` step for anonymous users – they always default to “speed”.

Result: two round‑trips instead of five.

---

### 3 · Those scattered 50 ms `setTimeout` “band‑aids”

The July 21 tab‑switch hot‑fix wrapped several auth handlers in `setTimeout(..., 50)` . During bootstrap they fire **in series**:

```
authStateChange   50 ms
onSignedIn        50 ms
ensureUserRow     50 ms
loadGameState     50 ms
```

That’s another unnecessary 200 ms.

Replace them with a micro‑task that only breaks the call stack:

```ts
queueMicrotask(() => { ... });     // or setTimeout(fn, 0)
```

Keep the one 50 ms delay only where it actually fixes the Supabase dead‑lock.

---

### 4 · Measure it, don’t guess

```ts
performance.mark('bootstrap:start');
// …after signup
performance.mark('bootstrap:signup');
// …when first elements render
performance.mark('bootstrap:ready');
performance.measure('bootstrap', 'bootstrap:start', 'bootstrap:ready');
```

Open DevTools → *Performance* to see the exact step that eats time.
Test again on *Slow 4G* throttling – target < 3 s TTI.

---

### 5 · Expected outcome after the tweaks

| Step                  | Target time                        |
| --------------------- | ---------------------------------- |
| `auth/v1/signup`      | 300–400 ms                         |
| Parallel INSERT + RPC | 300–400 ms                         |
| Client‑side work      | < 500 ms                           |
| **Total TTI**         | **≈ 1.2 s on Wi‑Fi, < 3 s on 4 G** |

Turnstile no longer blocks, and the game starts consistently whether the player is on desktop or mobile.

---

Implement the three code changes above, redeploy, and verify with real‑device profiling.
